% Clear any loaded files/variables
%clear all;

% Close any open figures
%close all;

% Load Data
dat = load('data.txt');

% Subjects
sIni = {'BL'}; 

% Label Data Columns
sub             = dat(:,1);
ses             = dat(:,2);
block           = dat(:,3);
trial           = dat(:,4);
cond            = dat(:,5);
trialType       = dat(:,6);
trialISI        = dat(:,7);
targetLoc       = dat(:,8);
targetEcc       = dat(:,9); 
cueEcc          = dat(:,10);

gapSize         = dat(:,11);
gapLocT         = dat(:,12);

tedfFix          = dat(:,13);
tedfpreCueON    = dat(:,14);
tedfpreISIOn    = dat(:,15);
tedfstimOn      = dat(:,16);
tedfpostISIOn   = dat(:,17); %same as tedfstimOff
tedfrespToneOn  = dat(:,18);
%tedfClr         = dat(:,19);

tSac            = dat(:,19);
keyRT           = dat(:,20);
resp            = dat(:,21);
cor             = dat(:,22);
sacReq          = dat(:,23);
stairCase       = dat(:,24);

trial2          = dat(:,25);
sacNum          = dat(:,26);
sacType         = dat(:,27);

sacOn           = dat(:,28);
sacOff          = dat(:,29);
sacDur          = dat(:,30);
sacVPeak        = dat(:,31);

sacDist         = dat(:,32); %rho
sacAngle1       = dat(:,33); %theta
sacAmp          = dat(:,34);
sacAngle2       = dat(:,35);

sacxOnset       = dat(:,36);
sacyOnset       = dat(:,37);
sacxOffset      = dat(:,38);
sacyOffset      = dat(:,39);



%% Various Variables 
near = targetEcc == 2.5;
%far = targetEcc == 5.0;

% targetLoc
% 1 = left
% 2 = right
% 3 = up
% 4 = down

%delay = trialISI
ISI1 = trialISI == 100;
ISI2 = trialISI == 300;
ISI3 = trialISI == 500;
ISI4 = trialISI == 700;
ISI5 = trialISI == 900;

% Condition
valid = trialType == 1;
%invalid = trialType == 2;
neutral = trialType == 3 ;
% Subjects
numSub = length(unique(sub));

% Stimuli
%targLeft = targLoc ==1;
%targRight = targLoc == 2;

uniqueTrial = sacNum == 0 | sacNum == 1;  

totalTrial = sum(uniqueTrial)
totalCor = sum(cor(uniqueTrial))
totalCor/totalTrial

%% Percent Correct Valid, Invalid, Neutral

%use = near % | far; % | far; %near;
%use =  far; 
%use = far;
i = 0;
counter = 0;



for i=1:numSub    
    counter = counter + 1;

    vTotalTrialV = sum(uniqueTrial & sub==i & valid  & near  );  
    vTotalCorV = sum(cor(uniqueTrial & sub==i & valid  & near ));    
    perCor(counter,1) = vTotalCorV/vTotalTrialV; % get mean rate for interval for t-test
    
    nTotalTrialN = sum(uniqueTrial & sub==i & neutral & near  ); 
    nTotalCorN = sum(cor(uniqueTrial & sub==i & neutral  & near  ));    
    perCor(counter,2) = nTotalCorN/nTotalTrialN; % get mean rate for interval for t-test
    
%     vTotalTrialF = sum(uniqueTrial & sub==i & valid  & far  );  
%     vTotalCorF = sum(cor(uniqueTrial & sub==i & valid  & far  ));    
%     perCor(counter,3) = vTotalCorF/vTotalTrialF; % get mean rate for interval for t-test
%     
%     nTotalTrialF = sum(uniqueTrial & sub==i & neutral & far  ); 
%     nTotalCorF = sum(cor(uniqueTrial & sub==i & neutral  & far  ));    
%     perCor(counter,4) = nTotalCorF/nTotalTrialF; % get mean rate for interval for t-test
%     
%     subplot(numSub+1,1,counter)
% 
%     plot(perCor(counter,1:2), '-oc', 'LineWidth', 1); 
%     axis([.5,2.5, .50, 1]);
%     hold on;
%     plot(perCor(counter,3:4), '-ob', 'LineWidth', 1); 
%     legend('Near', 'Far');
%     xlabel('Condition (Valid, Neutral)');
%     ylabel('Percent Correct');
%     title(i);
      
end

if numSub>1
figure
perCorMean = mean(perCor);
perCorSem = std(perCor)/sqrt(length(perCor)); % standard error of the mean
barwitherr(perCorSem, perCorMean);
axis([.5,4.5, .65, 1]);
xlabel('Condition (Valid, Neutral)');
ylabel('Percent Correct');
end

%anova_rm(perCor)


%% Percent Correct Across ISI

i = 0;

counter = 0;
figure

for i=1:numSub  
    counter = counter + 1;
 
    vTotalTrial100 = sum(uniqueTrial & sub==i & valid & ISI1);
    vTotalCor100 = sum(cor(uniqueTrial & sub==i & valid  & ISI1));    
    vPerCor(counter,1) = vTotalCor100/vTotalTrial100; % get mean rate for interval for t-test
    
    vTotalTrial300 = sum(uniqueTrial & sub==i & valid & ISI2);
    vTotalCor300 = sum(cor(uniqueTrial & sub==i & valid & ISI2));    
    vPerCor(counter,2) = vTotalCor300/vTotalTrial300; % get mean rate for interval for t-test
    
    vTotalTrial500 = sum(uniqueTrial & sub==i & valid & ISI3);
    vTotalCor500 = sum(cor(uniqueTrial & sub==i & valid & ISI3));    
    vPerCor(counter,3) = vTotalCor500/vTotalTrial500; % get mean rate for interval for t-test
    
    vTotalTrial700 = sum(uniqueTrial & sub==i & valid & ISI4);
    vTotalCor700 = sum(cor(uniqueTrial & sub==i & valid & ISI4));    
    vPerCor(counter,4) = vTotalCor700/vTotalTrial700; % get mean rate for interval for t-test
    
    vTotalTrial900 = sum(uniqueTrial & sub==i & valid & ISI5);
    vTotalCor900 = sum(cor(uniqueTrial & sub==i & valid & ISI5));    
    vPerCor(counter,5) = vTotalCor900/vTotalTrial900; % get mean rate for interval for t-test

    
    
    nTotalTrial100 = sum(uniqueTrial & sub==i & neutral & ISI1);
    nTotalCor100 = sum(cor(uniqueTrial & sub==i & neutral  & ISI1));    
    nPerCor(counter,1) = nTotalCor100/nTotalTrial100; % get mean rate for interval for t-test
    
    nTotalTrial300 = sum(uniqueTrial & sub==i & neutral & ISI2);
    nTotalCor300 = sum(cor(uniqueTrial & sub==i & neutral & ISI2));    
    nPerCor(counter,2) = nTotalCor300/nTotalTrial300; % get mean rate for interval for t-test
    
    nTotalTrial500 = sum(uniqueTrial & sub==i & neutral & ISI3);
    nTotalCor500 = sum(cor(uniqueTrial & sub==i & neutral & ISI3));    
    nPerCor(counter,3) = nTotalCor500/nTotalTrial500; % get mean rate for interval for t-test
    
    nTotalTrial700 = sum(uniqueTrial & sub==i & neutral & ISI4);
    nTotalCor700 = sum(cor(uniqueTrial & sub==i & neutral & ISI4));    
    nPerCor(counter,4) = nTotalCor700/nTotalTrial700; % get mean rate for interval for t-test
    
    nTotalTrial900 = sum(uniqueTrial & sub==i & neutral & ISI5);
    nTotalCor900 = sum(cor(uniqueTrial & sub==i & neutral & ISI5));    
    nPerCor(counter,5) = nTotalCor900/nTotalTrial900; % get mean rate for interval for t-test
    
    subplot(numSub,1,counter)
    plot(vPerCor(counter,:), '-og', 'LineWidth', 1); % VALID 
    hold on;
    plot(nPerCor(counter,:), '-ob', 'LineWidth', 1); % NEUTRAL
    axis([0.75,5.25, .5, 1]);
    set(gca, 'XTick', [1, 2, 3, 4, 5])
    set(gca, 'XTickLabel', [175, 375, 575, 775, 975]) % SOA 
    xlabel('SOA');
    ylabel('% Correct');    
    title(i);
    legend('Valid', 'Neutral');
    
end

[a,b] = ttest(vPerCor(:,1), nPerCor(:,1), 0.05, 'right') % one tailed test

%Percent Correct Overall

if numSub>1

% Mean by SOAs
figure
vPerCorISIMean = mean(vPerCor);
nPerCorISIMean = mean(nPerCor);
vPerCorISISem = std(vPerCor)/sqrt(length(vPerCor)) % standard error of the mean
errorbar(vPerCorISIMean, vPerCorISISem, '-og')
hold on;
nPerCorISISem = std(nPerCor)/sqrt(length(nPerCor)) % standard error of the mean
errorbar(nPerCorISIMean, nPerCorISISem, '-ob')
hold on;
axis([0.75,3.25, .50, 1]);
set(gca, 'XTick', [1, 2, 3])
set(gca, 'XTickLabel', [175, 375, 575, 775, 975]) % SOA
xlabel('SOA');
title('Percent Correct');
legend('Valid', 'neutral');
    
end



% %%  Key RT
% 
% useRT =  keyRT < 1500;
% %use = keyRT < 600;
% 
% i = 0;
% counter = 0;
% 
% figure
% 
% for i=1:numSub    
%     counter = counter + 1;
%     
%     % Valid
%     vRTAll = mean((keyRT(sub==i & valid & uniqueTrial & useRT)));    
%     RT(counter,1) = vRTAll; % get mean rate for interval for t-test
%     
%     vRT1 = mean((keyRT(sub==i & valid & uniqueTrial & useRT & ISI1)));    
%     vRT(counter,1) = vRT1; % get mean rate for interval for t-test
%     
%     vRT2 = mean((keyRT(sub==i & valid & uniqueTrial & useRT & ISI2)));    
%     vRT(counter,2) = vRT2; % get mean rate for interval for t-test
%     
%     vRT3 = mean((keyRT(sub==i & valid & uniqueTrial & useRT & ISI3)));    
%     vRT(counter,3) = vRT3; % get mean rate for interval for t-test
% 
%     vRT4 = mean((keyRT(sub==i & valid & uniqueTrial & useRT & ISI4)));    
%     vRT(counter,4) = vRT4; % get mean rate for interval for t-test
%     
%     vRT5 = mean((keyRT(sub==i & valid & uniqueTrial & useRT & ISI5)));    
%     vRT(counter,5) = vRT5; % get mean rate for interval for t-test
% 
%     
%     nRTAll = mean((keyRT(sub==i & neutral & uniqueTrial & useRT)));    
%     RT(counter,2) = nRTAll; % get mean rate for interval for t-test
%     
%     nRT1 = mean((keyRT(sub==i & neutral & uniqueTrial & useRT & ISI1)));    
%     nRT(counter,1) = nRT1; % get mean rate for interval for t-test
%     
%     nRT2 = mean((keyRT(sub==i & neutral & uniqueTrial & useRT & ISI2)));    
%     nRT(counter,2) = nRT2; % get mean rate for interval for t-test
%     
%     nRT3 = mean((keyRT(sub==i & neutral & uniqueTrial & useRT & ISI3)));    
%     nRT(counter,3) = nRT3; % get mean rate for interval for t-test
% 
%     nRT4 = mean((keyRT(sub==i & neutral & uniqueTrial & useRT & ISI4)));    
%     nRT(counter,4) = nRT4; % get mean rate for interval for t-test
%     
%     nRT5 = mean((keyRT(sub==i & neutral & uniqueTrial & useRT & ISI5)));    
%     nRT(counter,5) = nRT5; % get mean rate for interval for t-test
%     
%     subplot(numSub,1,counter)
% 
%     plot(vRT(counter,:), '-og', 'LineWidth', 1); 
%     hold on;
%     plot(nRT(counter,:), '-ob', 'LineWidth', 1); 
%     hold on;
%     axis([0.75,5.25, 0, 500]);
%     set(gca, 'XTick', [1, 2, 3, 4, 5])
%     set(gca, 'XTickLabel', [200, 400, 600, 800, 1000])
%     %set(gca, 'XTickLabel', [100, 300, 500, 700, 900]) 
%     xlabel('SOA');    
%     ylabel('Mean RT (msec)');
%     title(i);
%     legend('Valid', 'Neutral');
% 
% end
% 
% % % %% Key RT All
% % % 
% % if numSub>1
% % figure
% % 
% % % Collapsed Mean
% % RTMean = mean(RT)
% % RTSem = std(RT)/sqrt(length(RT(:,1))) % standard error of the mean
% % barwitherr(RTSem, RTMean)
% % axis([.5,3.5, 100, 300]);
% % 
% % xlabel('Condition (Valid, neutral, Neutral)');
% % ylabel('Mean RT');
% % 
% % % Mean by ISIs
% % figure
% % vRTISIMean = mean(vRT);
% % iRTISIMean = mean(iRT);
% % %nRTISIMean = mean(nRT);
% % 
% % vRTISISem = std(vRT)/sqrt(length(vRT)) % standard error of the mean
% % errorbar(vRTISIMean, vRTISISem, '-og')
% % hold on;
% % iRTISISem = std(iRT)/sqrt(length(iRT)) % standard error of the mean
% % errorbar(iRTISIMean, iRTISISem, '-or')
% % hold on;
% % axis([0.75,5.25, 0, 500]);
% % set(gca, 'XTick', [1, 2, 3])
% % set(gca, 'XTickLabel', [200, 400, 600, 800, 1000])
% % %set(gca, 'XTickLabel', [100, 300, 500, 700, 900]) 
% % xlabel('SOA');
% % ylabel('Mean RT (msec)');
% % title('Reaction Time');
% % legend('Valid', 'neutral');
% %     
% % end
% % 
